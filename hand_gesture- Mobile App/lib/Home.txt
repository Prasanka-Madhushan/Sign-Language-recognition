import 'package:flutter/material.dart';
import 'package:camera/camera.dart';
import 'package:tflite_v2/tflite_v2.dart';

List<CameraDescription> cameras = [];

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();
  cameras = await availableCameras();
  runApp(MyApp(cameras: cameras));
}

class MyApp extends StatelessWidget {
  final List<CameraDescription> cameras;
  MyApp({Key? key, required this.cameras}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Hand Gesture Recognition',
      theme: ThemeData(
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: TfliteModel(cameras: cameras),
    );
  }
}

class TfliteModel extends StatefulWidget {
  final List<CameraDescription> cameras;
  TfliteModel({Key? key, required this.cameras}) : super(key: key);

  @override
  _TfliteModelState createState() => _TfliteModelState();
}

class _TfliteModelState extends State<TfliteModel> {
  CameraController? _cameraController;
  String _result = 'Gesture will appear here';

  @override
  void initState() {
    super.initState();
    loadModel().then((_) {
      _startCameraStream();
    }).catchError((e) {
      print("Error loading model: $e");
    });
  }

  Future<void> loadModel() async {
    await Tflite.close();
    String? res = await Tflite.loadModel(
      model: "assets/my_model.tflite",
      labels: "assets/palm_detection_labelmap.txt",
    );
    print("Model loaded: $res");
  }

  void _startCameraStream() {
  _cameraController = CameraController(widget.cameras[0], ResolutionPreset.low);
  _cameraController!.initialize().then((_) {
    if (!mounted) return;
    setState(() {}); // Refreshes the UI with the initialized camera controller
    _cameraController!.startImageStream((CameraImage image) {
      // Image stream handling
    });
  }).catchError((e) {
    print("Error initializing camera: $e");
  });
}


  @override
  Widget build(BuildContext context) {
    if (_cameraController == null || !_cameraController!.value.isInitialized) {
      return Scaffold(
        body: Center(
          child: Text('Failed to initialize the camera.'),
        ),
      );
    }

    return Scaffold(
      appBar: AppBar(
        title: const Text('Hand Gesture Recognition'),
        backgroundColor: Colors.deepPurple,
      ),
      body: Column(
        children: <Widget>[
          Expanded(
            flex: 1,
            child: CameraPreview(_cameraController!),
          ),
          Text(
            _result,
            style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
          ),
        ],
      ),
    );
  }

  @override
  void dispose() {
    _cameraController?.dispose();
    Tflite.close();
    super.dispose();
  }
}
